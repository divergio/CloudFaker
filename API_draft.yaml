#The Draft API Specification for Chase
---
#some configuration options, if they make sense to go here
Configuration:
  #when testing this, we'll pass unimplemented stuff to gabble.me:8888 and run on gabble.me:8080
  PORT: 8080
  PRODUCTION_SERVER: http://gabble.me:8888
#Constants is for things like API secrets, test users, things not as big 
#as a class but that might be referenced inside responses
Constants:
  DEFAULT_USER_TOKEN: '865eb672f15e98ba0bd40cefaed6698c'
  DEFAULT_APP_SECRET: 'c93w84ful1o4dk6'
  #An array will be interpreted as OR
  TEST_USER_NAMES: 
    - gabble1
    - gabble2
    - gabble3
  TEST_PASSWORDS:
    - gabble1
    - gabble2
    - gabble3

Objects:
   CAItem:
      detail: The class that holds information about a single item.
      properties:
        title: 
          type: string
          #generator information is not outputted to Markdown
          generator:
            #random_title is the name of a function that the user must implement
            #it returns a string to use for title and is called like "random_title()"
            method: random_title
        description:
          type: string
          generator:
            method: random_description
        price:
          type: integer
          generator:
            method: random_item_price
        categories:
          type: string
          #values given, but no generator
          #therefore, randomly pick one of the values
          values: 
            - MtShirt
            - MtankTop
            - MSuit
            - Mshirt
            - MPolo
            - MSweater
            - MAccess
            - MCoat
            - MShoes
            - MPants
            - MBag
            - MHat
            - FUndies
            - FtShirt
            - FShirt
            - FVest
            - FPolo
            - FSweater
            - FCoat
            - FKnitwear
            - FSilk
            - FSkirt
            - FPants
            - FDress
            - FSuit
            - FBag
            - FHat
            - FAccess
            - FShoes
        images: 
          detail: 
            A comma separated array of string URLs 
            to the images for this item.
          type: string
          generator:
            method: random_images
            #1-4 images, size 600x600
            args: [1,4,600,600]            
          isPopular:
            type: integer
            #randomly choose 0 or 1
            values: [0,1]
          isLiked:
            type: integer
            values: [0,1]
          commentNumber:
            type: integer
            generator:
              method: random_int
              #random int from 0 to 100
              args: [0,100]
          likeNumber:
            type: integer
            generator:
              method: random_int
              args: [0,100]
          id:
            type: string
            generator:
              method: random_id
          author:
            type: CAAccount
            generator:
              method: random_author()

Requests:
  #the name is the slug that will be used to look up this request
  getItems:
      #possible values GET, POST, PUT, DEL
      type: GET
      path: /api/items/
      #if implemented, pass through to other server
      #this allows incrementally adding functionality
      implemented: false
      parameters:
        userToken:
          detail: optional, if no userToken, it returns items displayed on login page
          type: string
        type:
          detail: 0 for timeline, 1 for popular
          type: integer
        page:
          type: integer          
      #using block literal to keep the JSON block as a string
      #if something is in <>, it's a keyword to look up in the generators
      #or in the object list
      success: | 
        { "success" : 
          {
          "items" : 
            [<CAItem>]
          }
        }
      conditions:
        userToken : <DEFAULT_USER_TOKEN>
      failure: |
        {"error":
          {"message":"Cannot find User by userToken. authentication failed","key":"user","variables":[]},"redirectUrl":"","notes":""
        }
      #This needs to be thought out some more.
      generator_params:
        items:
          count: 12
        CAItem.id:
          generator:
            args: <itemId>
          
          
          
      